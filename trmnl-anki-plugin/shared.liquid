<script src="https://cdnjs.cloudflare.com/ajax/libs/pako/2.1.0/pako.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/dayjs@1/dayjs.min.js"></script>
<style>
  .content :first-child {
    font-size: 2rem;
    line-height: 2rem;
  }
</style>

<div data-plugin-instance="{{ trmnl.plugin_settings.instance_name }}">
  <div class="layout">
    <div class="richtext richtext--center gap--large">
      <div data-content-limiter="true" class="markdown content content--center gap text--center pt--1">
      </div>
    </div>
  </div>
  
  <div class="title_bar">
    <img class="image" src="https://usetrmnl.com/images/plugins/trmnl--render.svg">
    <span class="title">{{ trmnl.plugin_settings.instance_name }}</span>
    <span class="instance">Created on: <span class="note-id">{{ note_id }}</span></span>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function(e) { 
    // Yoinked from https://github.com/albert7617/trmnl-japanese
    function decompressText(compressedText) {
      // Decode the base64 string to binary data
      const binaryString = atob(compressedText);

      // Convert the binary string to a Uint8Array
      const bytes = new Uint8Array(binaryString.length);
      for (let i = 0; i < binaryString.length; i++) {
        bytes[i] = binaryString.charCodeAt(i);
      }

      // Decompress using zlib (pako is a popular zlib library for browsers)
      // Note: You'll need to include pako.js for this to work
      const decompressedBytes = pako.inflate(bytes);

      // Convert the decompressed bytes back to a string
      const decoder = new TextDecoder('utf-8');
      return decoder.decode(decompressedBytes);
    }

    function populate(data, instance) {
      const decompressedData = JSON.parse(decompressText(data));
      console.log(JSON.stringify(decompressedData));
      const instanceDiv = document.querySelector(`[data-plugin-instance="${instance}"]`)
      const mainContainer = instanceDiv.querySelector(`.content`);
      Object.entries(decompressedData).forEach(([key, value]) => {
        if (!value) {
          return;
        }
        console.log(`${key} ${value}`);
        const el = document.createElement("span");
        // We intentionally don't escape the value since anki fields can contain styled HTML
        el.innerHTML = value;
        mainContainer.appendChild(el);
      });
      mainContainer.firstElementChild?.setAttribute("data-value-fit", "true");
      mainContainer.firstElementChild?.setAttribute("data-value-fit-max-height", "340");

      const noteTimestamp = instanceDiv.querySelector(`.note-id`);
      noteTimestamp.innerHTML = dayjs(parseInt(noteTimestamp.innerHTML)).format('MMM DD, YYYY');
    }
    populate("{{ compressed }}", "{{ trmnl.plugin_settings.instance_name }}");
  });
</script>